<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\study\oop\project\code</FILEPATH>
      <FILENAME>test.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>返回值被忽略: “scanf”。</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\study\oop\project\code\src\nlohmann</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>14549</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>表达式“0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=400-1”对此调用无效。</DESCRIPTION>
    <FUNCTION>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::decode</FUNCTION>
    <DECORATED>?decode@?$serializer@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@CAEAAEAAIE@Z</DECORATED>
    <FUNCLINE>14527</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\study\oop\project\code\src\nlohmann</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>14529</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\study\oop\project\code\src\nlohmann</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>14549</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\study\oop\project\code\src\nlohmann</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4752</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>nlohmann::detail::json_sax_dom_callback_parser&lt;nlohmann::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer&gt; &gt;::end_object</FUNCTION>
    <DECORATED>?end_object@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@@nlohmann@@@detail@nlohmann@@QAE_NXZ</DECORATED>
    <FUNCLINE>4732</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>